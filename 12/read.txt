float 和 absolute 特性
包裹性
破坏性
1.包裹性 容器absolute  绝对定位 会包裹内容 即高度宽度压缩至内容
2.破坏性 内容absolute  会导致父容器高度塌陷  即父容器在上薄薄一层 内容溢出

------------------------
img标签去除空格 用注释
例如：  <img src="" alt=""><!-- --><i>sadasd</i>

----------------------------------------------------------------------------------
position为absolute的元素如果没有设置left，top等值与left：0，top：0；的效果为何不一样？
一个div中有个absolute属性元素，其没有left或top值，其会像个普通的inline-block属性元素一样静静
地呆在这个div里，但是一旦设置了left：0；top：0；对不起，这个absolute元素立马变身，直接从DOMtree
里面脱离，独立于文档流，结果相对于最近的relative属性的祖先标签定位（若无，则body定位）。
由于我们平时使用absolute都离不开left，top之类的值，所以才会概念不清

------------------------------------------------------------------------------------
insertBefore() 方法在您指定的已有子节点之前插入新的子节点
input.parentNode.insertBefore(div, input); 在input前插入div
第二个参数不加的话，则默认在尾部插入

--------------------------------------------------------
onchange事件与onpropertychange事件的区别
	onchange事件在内容改变（两次内容有可能相等）且失去焦点时触发；
	onpropertychange事件是实时触发的，每增加或删除一个字符就会触发，
	通过js改变也会触发该事件，但是该事件是IE专有的。
oninput事件与onpropertychange事件的区别
	oninput事件是IE之外的多数浏览器支持的事件，在value改变时实时触发
	但是通过js改变value时不触发；onpropertychange事件是任何属性改变都会触发，
	而oninput却只在value改变时触发，oninput要通过addEventListener()来注册，
	onpropertychange与一般事件相同
oninput与onpropertychange失效的情况
	oninput事件： （1）当脚本中改变value时，不会触发
				  （2）从浏览器的自动下拉提示中选取时，不会触发
	onpropertychange事件：
			当input设置为disable=true后，不会触发
代码：
	if ("oninput" in input) {
		input.addEventListener("input", function() {
			if (this.value.trim() != "") {
				result.style.display = "block";
			} else {
				result.style.display = "none";
			}
		});
	} else {
		// IE6-IE8
		input.onpropertychange = function(event) {
			event = event || window.event;
			if (event.propertyName == "value" && /focus/.test(this.parentNode.className)) {
				if (this.value != "") {
					result.style.display = "block";
				} else {
					result.style.display = "none";
				}
			}
		}
	}

-------------------------------------------
利用&nbsp；和绝对定位的跟随性 做居中对齐或边缘对齐
text-align:center  然后空格在div中间然后一个绝对定位的元素在空格旁边
					再利用margin-left：-26px等等居中
text-align:right   然后空格在div右边，一个绝对定位的元素在空格左边，
					仍旧是利用margin-left: 20px等等 对齐

-----------------------------------------------------------------------
先介绍一下vh:相对于视窗的高度，那么vw:则是相对于视窗的宽度

“视区”所指为浏览器内部的可视区域大小，即window.innerWidth/window.innerHeight大小，不包含任务栏标题栏以及底部工具栏的浏览器区域大小。

css中clac(100vh - 16px) 不能写成100vh-16px 即减号之间要有间隔
Math.abs() 取绝对值

dom.style.cssFloat 火狐
dom.style.styleFloat ie


-----------------------------------------
外插 js的事件代理
利用js的事件冒泡 处理动态添加N多li并绑定点击事件，
应该绑定ul 不是li
e = e || window.event;兼容ie8及以下
var target = e.target||e.srcElement; 同样是兼容ie
if(target.tagName.toLowerCase() === "li"){
	//处理li的点击事件
}else{
	//非li的点击事件
}